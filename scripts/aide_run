#!/bin/sh
#
#     tiger - A UN*X security checking system
#     Copyright (C) 1993 Douglas Lee Schales, David K. Hess, David R. Safford
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#
# aide_run - 24/04/2003
# unSpawn <unspawn@rootshell.be>
#
#-----------------------------------------------------------------------------
#
TigerInstallDir='.'

#
# Set default base directory.
# Order or preference:
#      -B option
#      TIGERHOMEDIR environment variable
#      TigerInstallDir installed location
#
basedir=${TIGERHOMEDIR:=$TigerInstallDir}

for parm
do
   case $parm in
   -B) basedir=$2; break;;
   esac
done

#
# Verify that a config file exists there, and if it does
# source it.
#
[ ! -r $basedir/config ] && {
  echo "--ERROR-- [init002e] No 'config' file in \`$basedir'."
  exit 1
}

. $basedir/config

. $BASEDIR/initdefs

#
# If run in test mode (-t) this will verify that all required
# elements are set.
#
[ "$Tiger_TESTMODE" = 'Y' ] && {
  haveallcmds AWK CAT FMT GEN_PASSWD_SETS JOIN LS RM || exit 1
  haveallfiles BASEDIR WORKDIR || exit 1
  haveallvars TESTLINK HOSTNAME
  
  echo "--CONFIG-- [init003c] $0: Configuration ok..."
  exit 0
}

#------------------------------------------------------------------------
echo
echo "# Performing Aide filesystem integrity check..."

# REMARKS
# If acceptable and accepted, this check should be triggered by Tiger_Run_INTEGRIT_AIDE in tigerrc, 
# and Tiger_Run_TRIPW should be moved to Tiger_Run_INTEGRIT_TRIPW before we 
# try to add Samhain, Prelude Osiris and/or Integrit.

# TODO
# - Toggle verbose reporting using Tiger_Run_INTEGRIT_AIDE_VERBOSE=1
# - User input custom aide location (pref from read-only media)
#   Proposed user input var (tigerrc): Tiger_Run_INTEGRIT_AIDE_LOC_OVERRIDE
# - User input custom aide config(s) (pref from read-only media)
#   Proposed user input var (tigerrc): Tiger_Run_INTEGRIT_AIDE_CFG_OVERRIDE
# - User input custom db (pref from read-only media)
#   Proposed user input var (tigerrc): Tiger_Run_INTEGRIT_AIDE_DB_OVERRIDE
# - Expand with Integrit, Osiris and Prelude.

# For all of the below commands to fill in the gaps I'm thinking "how portable is this?"...

# Aide binary location|override + default check
# Which, find, user-supplied var or tigexp's findcmd?:
if [ -z "${Tiger_Run_INTEGRIT_AIDE_LOC_OVERRIDE}" ]; 
then AIDE=$(which aide)
else AIDE=${Tiger_Run_INTEGRIT_AIDE_LOC_OVERRIDE}
fi
# Aide binary default location, not using "eval" or "[ -x":
case "${#AIDE}" in 0) AIDE="/usr/local/bin/aide";; esac

# Aide configuration file location|override + default check
if [ -z "${Tiger_Run_INTEGRIT_AIDE_CFG_OVERRIDE}" ]; 
then AIDE_CFG=$($AIDE -v 2>&1| $GREP -e "^CONFIG_FILE" | cut -d " " -f 3| tr -d "\"")
else AIDE_CFG=${Tiger_Run_INTEGRIT_AIDE_CFG_OVERRIDE}
fi
# Aide default configuration file, not using "eval" or "[ -z|-f":
case "${#AIDE_CFG}" in 0) AIDE_CFG="/usr/local/etc/aide.conf";; esac

# Aide database override, else this variable is taken from the configuration file of course
if [ ! -z "${Tiger_Run_INTEGRIT_AIDE_DB_OVERRIDE}" ]; 
then AIDE_DB="--after=database=file:${Tiger_Run_INTEGRIT_AIDE_DB_OVERRIDE}"
fi

# Run Aide using std conf, report to stdout
AIDE_RPT="$WORKDIR/aide.out.tmp.$$"
$AIDE --check --config=${AIDE_CFG} --report=stdout ${AIDE_DB} 2>/dev/null > ${AIDE_RPT}

# Check temporary report for the changes signal:
grep ${AIDE_RPT} -qe "AIDE found differences"

case "$?" in
0)	# Summary
	AIDE_SUMMARY=$(grep ${AIDE_RPT} -e "^Total number"
	message INFO aide003s "" "Summary: ${AIDE_SUMMARY}"
	# Differentiate between added, changed and removed files
	for status in changed removed detected; do
		grep ${AIDE_RPT} -e "^${status}:" \
		| $CUT -d ":" -f 2 | while read result; do
		case "${status}" in
			changed) exp="aide003c";;
			removed) exp="aide004r";;
			added)   exp="aide005a";;
		esac
		message WARN ${exp} "" "Detected ${status} file ${result}"
		done
	done;;
1)	# No changes to report
	message INFO aide001k "" "No changes detected.";;
esac

$RM -f ${AIDE_RPT}

exit 0
