#!bin/sh
#
#     tiger - A UN*X security checking system
#     Copyright (C) 2003 Michael Sconzo, Javier Fernandez-Sanguino Peña
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 1, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#
#  check_xinetd - 02/11/2003
# 
#  Checks which xinetd services are enabled or disabled.
#
#  08/11/2003 - jfs - Fixed dependancies. Now uses XINETDFILE instead of 
#               hardcoding the location. Added additional checks
#               to avoid errors and use message instead of echo.
#  08/12/2003 - jfs - Now write messages for disabled services too. Also
#               fixed some errors.
#
#-----------------------------------------------------------------------------
# TODO:
#
# - write the messages for these warnings/information
# - xinetd checks should determine if insecure services are active or
#   running as root when not needed.
# - check if the xinetd configuration file is writable
# - check if the xinetd files under the xinetd directory are writable 
# - it could also check vs the system's provided XINETDFILE to determine
#   changes in services just as check_inetd does
#
#-----------------------------------------------------------------------------
#
TigerInstallDir='.'

#
# Set default base directory.
# Order or preference:
#      -B option
#      TIGERHOMEDIR environment variable
#      TigerInstallDir installed location
#
basedir=${TIGERHOMEDIR:=$TigerInstallDir}

for parm
do
   case $parm in
   -B) basedir=$2; break;;
   esac
done
#
# Verify that a config file exists there, and if it does
# source it.
#
[ ! -r $basedir/config ] && {
  echo "--ERROR-- [init002e] No 'config' file in \`$basedir'."
  exit 1
}
. $basedir/config

. $BASEDIR/initdefs
#
# If run in test mode (-t) this will verify that all required
# elements are set.
#
[ "$Tiger_TESTMODE" = 'Y' ] && {
  haveallcmds GREP AWK LS || exit 1
  haveallfiles BASEDIR || exit 1
  
  echo "--CONFIG-- [init003c] $0: Configuration ok..."
  exit 0
}

#------------------------------------------------------------------------
haveallcmds GREP AWK LS || exit 1
haveallfiles BASEDIR || exit 1

echo
echo "# Performing check of 'xinetd' related services..."

check_xinetconfig()
{
	xinetd_dir="$1"
	$LS $xinetd_dir |
	while read file
	do
		if [ "`$GREP -i 'disable' $file | $AWK '{print $NF}'`" = "no" ] ; 
		then
			service=`$GREP -w 'server' $file | $GREP '=' | $AWK '{print $NF}'`
			message INFO xnet002i "Service $file is enabled using: $service."
		else
			message INFO xnet002i "Service $file is disabled."
		fi
	done
}

XINETDCONF="/etc/xinetd.conf"

if [ -r $XINETDCONF ] ;
then
	$GREP 'includedir' $XINETDCONF | $AWK '{print $NF}' |
	while read xinetd_directory
	if [ -d "$xinetd_directory" ] 
	then
		check_xinetconfig $xinetd_directory
	else
		message FAIL xnet002f "The location included in $XINETDCONF is not a directory"
	fi
	done
else
	message FAIL xnet001f "It appears that xinetd is not installed, cannot find file $XINETDFILE."
fi
